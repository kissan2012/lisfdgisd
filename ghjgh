#include <iostream>
#include <vector>
#include <climits>
using namespace std;

pair<int, int> find_shortest_chain_with_max_sum_divisible_by_43(vector<int> nums) {
    int n = nums.size();
    int max_sum = INT_MIN;
    int min_len = INT_MAX;

    for (int i = 0; i < n; i++) {
        for (int j = i; j < n; j++) {
            int curr_sum = 0;
            for (int k = i; k <= j; k++) {
                curr_sum += nums[k];
            }
            int curr_len = j - i + 1;


            if (curr_sum % 43 == 0 && curr_sum > max_sum) {
                max_sum = curr_sum;
                min_len = curr_len;
            }

        }
    }
    if (max_sum != INT_MIN) {
        return make_pair(max_sum, min_len);
    } else {
        return make_pair(-1, -1);
    }
}

int main() {
    int n; cin >> n;
    vector<int> nums(n);
    for(int i = 0; i<n; i++)
        cin >> nums[i];

    pair<int, int> result = find_shortest_chain_with_max_sum_divisible_by_43(nums);
    if (result.first != -1 && result.second != -1) {
        cout << "Max Sum: " << result.first << endl;
        cout << "Min Length: " << result.second << endl;
    } else {
        cout << "No suitable chain found" << endl;
    }
    return 0;
}
